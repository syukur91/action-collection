name: functionbeat-testing
on: [push]

jobs:
 push-action:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout public repo
      id: checkout
      uses: actions/checkout@master

    - name: Download the function beat binary
      id: binary      
      run: curl -L -O https://artifacts.elastic.co/downloads/beats/functionbeat/functionbeat-7.4.1-linux-x86_64.tar.gz && tar xvzf functionbeat-7.4.1-linux-x86_64.tar.gz && mv functionbeat-7.4.1-linux-x86_64 functionbeat && ls -al

    # We can manage the error of functionbeat deployment by setting github action continue-on-error: true to ignore step error, and send the failure or success through step context
    - name: Deploy the functionbeat
      id: deploy
      continue-on-error: true
      run: if [[ $(./functionbeat -v -e -d "*" deploy my-fucking-functionbeat-logs)  > 0 ]] ; then  echo "::set-output name=functionbeat_status::failure"; else echo "::set-output name=functionbeat_status::success" ; fi
      working-directory: functionbeat

    # Get the result of the previous step 
    - name: Check the output of functionbeat deployment
      id: dump      
      env:
        STEPS_CONTEXT: ${{ toJson(steps.deploy.outputs) }}
      run: echo "$STEPS_CONTEXT"

    - name: Using output from previous step as condition to next step
      continue-on-error: true  
      if: steps.deploy.outputs.functionbeat_status == 'success'
      id: condition      
      run: echo "hello"
      working-directory: functionbeat